#!/bin/bash

# Defined path
MainPath="$(pwd)"
Dexter="$(pwd)/../Dexter"
Any="$(pwd)/../AnyKernel3"

# Upload to telegram
UT=1
if [ $UT = 1 ]; then
    BOT_TOKEN="5179917277:AAEOFmUqnGVXHRDIpYL7i2zogCZvmpD-VCA"
    CHAT_ID="-1001545016053"
fi

msg() {
    curl -X POST "https://api.telegram.org/bot$BOT_TOKEN/sendMessage" \
    -d chat_id="$CHAT_ID" \
    -d "disable_web_page_preview=true" \
    -d "parse_mode=html" \
    -d text="$Text"
}

Upload() {
    curl -F chat_id="$CHAT_ID" \
    -F document=@"$FILE" \
    -F parse_mode=markdown https://api.telegram.org/bot$BOT_TOKEN/sendDocument \
    -F caption="$Caption"
}

# Make flashable zip
MakeZip() {
    if [ ! -d $Any ]; then
        git clone https://github.com/noobbeast/AnyKernel3.git -b master $Any
        cd $Any
    else
        cd $Any
        git reset --hard
        git checkout master
        git fetch origin master
        git reset --hard origin/master
    fi
    cp -af $MainPath/out/arch/arm64/boot/Image.gz-dtb $Any
    sed -i "s/kernel.string=.*/kernel.string=$KERNEL_NAME-$HeadCommit test by $KBUILD_BUILD_USER/g" anykernel.sh
    zip -r9 $MainPath/"$ZIP_KERNEL_VERSION-$KERNEL_NAME-$Compiler.zip" * -x .git README.md *placeholder
    cd $MainPath
}


Clone_Dexter() {
    if [ $UT = 1 ]; then
        Text="========================
               Clone Compilerüêí
========================"
        msg
    fi
    if [ ! -d $Dexter ]; then
        git clone --depth=1 https://gitlab.com/fajarputro72/dexterclang.git -b 15.0.4 $Dexter
    else
        cd $Dexter
        git fetch origin 15.0.4
        git checkout 15.0.4
        git branch -D 15.0.4
        git branch 15.0.4 && git checkout 15.0.4
        cd $MainPath
    fi
    Dexter_Version="$($Dexter/bin/clang --version | grep clang)"
}

# Defined config
HeadCommit="$(git log --pretty=format:'%h' -1)"
export ARCH="arm64"
export SUBARCH="arm64"
export KBUILD_BUILD_USER="Noobbeast"
export KBUILD_BUILD_HOST="PowerEdge"
DATE=$(TZ=Asia/Jakarta date +"%H%M-%d%m%y")
Defconfig="begonia_user_defconfig"
KERNEL_NAME=$(cat "$MainPath/arch/arm64/configs/$Defconfig" | grep "CONFIG_LOCALVERSION=" | sed 's/CONFIG_LOCALVERSION="-*//g' | sed 's/"*//g' )
ZIP_KERNEL_VERSION="4.14.$(cat "$MainPath/Makefile" | grep "SUBLEVEL =" | sed 's/SUBLEVEL = *//g')$(cat "$(pwd)/Makefile" | grep "EXTRAVERSION =" | sed 's/EXTRAVERSION = *//g')"

Build_Dexter() {
    Compiler=Begonia-Clang-A13
    if [ $UT = 1 ]; then
        Text="========================
 <b>Device</b>: <code>Redmi Note 8 Pro </code>%0A<b>Branch</b>: <code>$(git branch | grep '*' | awk '{ print $2 }')</code>%0A<b>Kernel name</b>: <code>$(cat "arch/arm64/configs/begonia_user_defconfig" | grep "CONFIG_LOCALVERSION=" | sed 's/CONFIG_LOCALVERSION="-*//g' | sed 's/"*//g' )</code>%0A<b>Kernel version</b>: <code>4.14.$(cat "Makefile" | grep "SUBLEVEL =" | sed 's/SUBLEVEL = *//g')</code>%0A<b>Build user</b>: <code>$KBUILD_BUILD_USER</code>%0A<b>Build host</b>: <code>$KBUILD_BUILD_HOST</code>%0A<b>Compiler</b>:%0A<code>$Dexter_Version</code>%0A<b>Changelogs</b>:%0A<code>$(git log --oneline -5 --no-decorate)</code>
 ========================üêí"
        msg
    fi
    rm -rf out
    TIME=$(date +"%m%d%H%M")
    BUILD_START=$(date +"%s")

    make  -j$(nproc --all)  O=out ARCH=arm64 SUBARCH=arm64 $Defconfig
    exec 2> >(tee -a out/error.log >&2)
    make  -j$(nproc --all)  O=out \
                            PATH="$Dexter/bin:/usr/bin:$PATH" \
                            CC=clang \
                            AR=llvm-ar \
        		    AS=llvm-as \
                            NM=llvm-nm \
                            HOSTCC=clang \
                            HOSTCXX=clang++ \
                            STRIP=llvm-strip \
                            OBJCOPY=llvm-objcopy \
                            OBJDUMP=llvm-objdump \
                            READELF=llvm-readelf \
                            OBJSIZE=llvm-size \
                            STRIP=llvm-strip \
                            TRIPLE=aarch64-linux-gnu- \
			    LD=ld.lld \
                            CROSS_COMPILE=aarch64-linux-gnu- \
                            CROSS_COMPILE_ARM32=arm-linux-gnueabi-
}

# End with success or fail
End() {
    if [ -e $MainPath/out/arch/arm64/boot/Image.gz-dtb ]; then
        BUILD_END=$(date +"%s")
        DIFF=$((BUILD_END - BUILD_START))
        MakeZip
        ZIP=$(echo *$Compiler*$TIME*.zip)
        if [ $UT = 1 ]; then
            TIME=$(echo "Build success in : $((DIFF / 60)) minute(s) and $((DIFF % 60)) second(s)")
            FILE=$ZIP
            Caption="$TIME @Noobbeast"
            Upload
        else
            echo "Build success in : $((DIFF / 60)) minute(s) and $((DIFF % 60)) second(s)"
        fi
    else
        BUILD_END=$(date +"%s")
        DIFF=$((BUILD_END - BUILD_START))
        if [ $UT = 1 ]; then
            TIME=$(echo "Build fail in : $((DIFF / 60)) minute(s) and $((DIFF % 60)) second(s)")
            FILE="out/error.log"
            Caption="$TIME croot sayang @Noobbeast"
            Upload
        else
            echo "Build fail in : $((DIFF / 60)) minute(s) and $((DIFF % 60)) second(s)"
        fi
    fi
}

Text=" ========================
      New Kernel On the Way Cok üêí
========================"
# Build choices
Dexter() {
    if [ $UT = 1 ]; then
        msg
    fi
    Clone_Dexter
    Build_Dexter
    End
}


